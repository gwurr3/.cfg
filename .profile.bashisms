# vim: syntax=sh:
# bash-specific .profile stuff goes in here


### set some mostly-bash-specific options.
### a lot of these will be defaults, but I wanted to have them here explicitly:
# enable hash of command history
set -h
# enable jobs
set -m
# brace expansion i.e. "{a,b,c}"
set -B
# prevent ‘>’, ‘>&’, and ‘<>’ from overwriting existing files. Safety.
set -C
# enable '!' history expansion
set -H
# we do want to expand symlinks
set +P
# spit out job output when next prompt line occurs
set +b


# populate LS_COLORS if we have dircolors util and ~/.LS_COLORS is present.
if which dircolors >>/dev/null && test -e "${HOME}/.LS_COLORS" ; then
	eval "$(dircolors --sh ${HOME}/.LS_COLORS)"
fi

# ensure .inputrc is loaded for readline config
bind -f ~/.inputrc


#######---------------- iterm2 integrations if term not Cathode
if ! contains "$TERMKIT_HOST_APP" "Cathode" ; then 
	if test -e "${HOME}/.iterm2_shell_integration.bash" ; then
		source "${HOME}/.iterm2_shell_integration.bash"
		if test -e "${HOME}/.iterm2/it2check" && ${HOME}/.iterm2/it2check ; then
			IS_THIS_ITERM2=TRUE
			alias tmux='tmux -CC'
			#test -e "${HOME}/.iterm2/it2attention" && ${HOME}/.iterm2/it2attention fireworks
			test -e "${HOME}/.iterm2/it2attention" && ${HOME}/.iterm2/it2attention start
		elif test -n $ITERM_SHELL_INTEGRATION_INSTALLED && test -n $TMUX ; then
			IS_THIS_ITERM2=TMUX
			alias tmux='tmux'
			test -e "${HOME}/.iterm2/it2attention" && ${HOME}/.iterm2/it2attention start
		else
			alias tmux='tmux -2'
		fi
	fi
fi

export IS_THIS_ITERM2
