## NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey   = <keysym> ':' <command> |
#                                  <keysym> '->' ':' <command>
#
#                       keysym   = <mod> '-' <key> | <key>
#
#                       mod      = 'built-in mod keyword' | <mod> '+' <mod>
#
#                       key      = <literal> | <keycode>
#
#                       literal  = 'single letter or built-in keyword'
#
#                       keycode  = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       ->       = keypress is not consumed by skhd
#
#                       command  = command is executed through '$SHELL -c' and
#                                  follows valid shell syntax. if the $SHELL environment
#                                  variable is not set, it will default to '/bin/bash'.
#                                  when bash is used, the ';' delimeter can be specified
#                                  to chain commands.
#
#                                  to allow a command to extend into multiple lines,
#                                  prepend '\' at the end of the previous line.
#
#                                  an EOL character signifies the end of the bind.

# start term
lalt - return : osascript ~/bin/.osa/run_term.scpt
lalt + lshift - return : osascript ~/bin/.osa/run_oterm.scpt
# start finder
lalt + lshift - f : osascript ~/bin/.osa/run_finder.scpt
# close window
lalt + lshift - c : yabai -m window --close

# restart
shift + alt - r : launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"

# focus window
lalt - h : yabai -m window --focus west
lalt - l : yabai -m window --focus east
lalt - j : yabai -m window --focus south
lalt - k : yabai -m window --focus north

# swap managed window
lshift + lalt - h : yabai -m window --swap west
lshift + lalt - l : yabai -m window --swap east
lshift + lalt - j : yabai -m window --swap south
lshift + lalt - k : yabai -m window --swap north

# move managed window
lshift + lcmd - h : yabai -m window --warp west
lshift + lcmd - l : yabai -m window --warp east
lshift + lcmd - j : yabai -m window --warp south
lshift + lcmd - k : yabai -m window --warp north

# toggle float on window
lalt - f : yabai -m window --toggle float
# toggle zoom
#lshift + lalt - f : yabai -m window --toggle zoom-parent
#lshift + lalt - f : yabai -m window --toggle zoom-fullscreen


# move floating window
lalt - left : yabai -m window --move rel:-20:0
lalt - right : yabai -m window --move rel:20:0
lalt - down : yabai -m window --move rel:0:20
lalt - up : yabai -m window --move rel:0:-20

# increase window size
lshift + lalt - left : yabai -m window --resize left:-20:0
lshift + lalt - right : yabai -m window --resize right:20:0
lshift + lalt - up : yabai -m window --resize top:0:-20
lshift + lalt - down : yabai -m window --resize bottom:0:20

# decrease window size
lctrl + lalt - right : yabai -m window --resize left:20:0
lctrl + lalt - left : yabai -m window --resize right:-20:0
lctrl + lalt - down : yabai -m window --resize top:0:20
lctrl + lalt - up : yabai -m window --resize bottom:0:-20


# balance size of windows
lshift + lalt - 0 : yabai -m space --balance

# create desktop, move window and follow focus - uses jq for parsing json (brew install jq)
lshift + lalt - n : yabai -m space --create && \
                  index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
                  yabai -m window --space "${index}" && \
                  yabai -m space --focus "${index}"

# send window to desktop
lshift + lalt - 0x21 : yabai -m window --space prev
lshift + lalt - 0x1E : yabai -m window --space next
lshift + lalt - 1 : yabai -m window --space 1
lshift + lalt - 2 : yabai -m window --space 2
lshift + lalt - 3 : yabai -m window --space 3
lshift + lalt - 4 : yabai -m window --space 4
lshift + lalt - 5 : yabai -m window --space 5
lshift + lalt - 6 : yabai -m window --space 6
lshift + lalt - 7 : yabai -m window --space 7
lshift + lalt - 8 : yabai -m window --space 8
lshift + lalt - 9 : yabai -m window --space 9

# focus desktop
lalt - tab : yabai -m space --focus recent
lalt - 0x21 : yabai -m space --focus prev || yabai -m space --focus last
lalt - 0x1E : yabai -m space --focus next || yabai -m space --focus first
lalt - 1 : yabai -m space --focus 1
lalt - 2 : yabai -m space --focus 2
lalt - 3 : yabai -m space --focus 3
lalt - 4 : yabai -m space --focus 4
lalt - 5 : yabai -m space --focus 5
lalt - 6 : yabai -m space --focus 6
lalt - 7 : yabai -m space --focus 7
lalt - 8 : yabai -m space --focus 8
lalt - 9 : yabai -m space --focus 9

# focus monitor
#lalt - 0x2B  : yabai -m display --focus prev || yabai -m display --focus last
#lalt - 0x2F  : yabai -m display --focus next || yabai -m display --focus first
lalt - 0x2B  : yabai -m display --focus west
lalt - 0x2F  : yabai -m display --focus east
lctrl + lalt - 3  : yabai -m display --focus 3
lctrl + lalt - 2  : yabai -m display --focus 2
lctrl + lalt - 1  : yabai -m display --focus 1

# send window to monitor
lalt + lshift - 0x2B  : yabai -m window --display west
lalt + lshift - 0x2F  : yabai -m window --display east
lctrl + lalt + lshift - 1  : yabai -m window --display 1
lctrl + lalt + lshift - 2  : yabai -m window --display 2
lctrl + lalt + lshift - 3  : yabai -m window --display 3

# toggle window split type
# alt - e : yabai -m window --toggle split

# float / unfloat window and center on screen
# alt - t : yabai -m window --toggle float;\
#           yabai -m window --grid 4:4:1:1:2:2

# toggle sticky(+float), topmost, picture-in-picture
# alt - p : yabai -m window --toggle sticky;\
#           yabai -m window --toggle topmost;\
#           yabai -m window --toggle pip





### Old chunkwm stuff below:

## close focused window
#shift + alt - c : chunkc tiling::window --close
#
## focus window
#alt - h : chunkc tiling::window --focus west
#alt - j : chunkc tiling::window --focus south
#alt - k : chunkc tiling::window --focus north
#alt - l : chunkc tiling::window --focus east
#
#cmd - j : chunkc tiling::window --focus prev
#cmd - k : chunkc tiling::window --focus next
#
## equalize size of windows
#shift + alt - 0 : chunkc tiling::desktop --equalize
#
## swap window
#shift + alt - h : chunkc tiling::window --swap west
#shift + alt - j : chunkc tiling::window --swap south
#shift + alt - k : chunkc tiling::window --swap north
#shift + alt - l : chunkc tiling::window --swap east
#
## move window
#shift + cmd - h : chunkc tiling::window --warp west
#shift + cmd - j : chunkc tiling::window --warp south
#shift + cmd - k : chunkc tiling::window --warp north
#shift + cmd - l : chunkc tiling::window --warp east
#
## move floating windows / windows on a floating space
#shift + alt - up     : chunkc tiling::window --warp-floating fullscreen
#shift + alt - left   : chunkc tiling::window --warp-floating left
#shift + alt - right  : chunkc tiling::window --warp-floating right
#shift + cmd - left   : chunkc tiling::window --warp-floating top-left
#shift + cmd - right  : chunkc tiling::window --warp-floating top-right
#shift + ctrl - left  : chunkc tiling::window --warp-floating bottom-left
#shift + ctrl - right : chunkc tiling::window --warp-floating bottom-right
#
## send window to desktop
##shift + alt - x : chunkc tiling::window --send-to-desktop $(chunkc get _last_active_desktop)
#shift + alt - 0x21 : chunkc tiling::window --send-to-desktop prev
#shift + alt - 0x1E : chunkc tiling::window --send-to-desktop next
#shift + alt - 1 : chunkc tiling::window --send-to-desktop 1
#shift + alt - 2 : chunkc tiling::window --send-to-desktop 2
#shift + alt - 3 : chunkc tiling::window --send-to-desktop 3
#shift + alt - 4 : chunkc tiling::window --send-to-desktop 4
#shift + alt - 5 : chunkc tiling::window --send-to-desktop 5
#shift + alt - 6 : chunkc tiling::window --send-to-desktop 6
#
## focus monitor
#alt - 0x2B  : chunkc tiling::monitor -f prev
#alt - 0x2F  : chunkc tiling::monitor -f next
#ctrl + alt - 1  : chunkc tiling::monitor -f 1
#ctrl + alt - 2  : chunkc tiling::monitor -f 2
#ctrl + alt - 3  : chunkc tiling::monitor -f 3
#
## send window to monitor and follow focus
#shift + alt - 0x2B  : chunkc tiling::window --send-to-monitor prev; chunkc tiling::monitor -f prev
#shift + alt - 0x2F  : chunkc tiling::window --send-to-monitor next; chunkc tiling::monitor -f next
#ctrl + cmd - 1  : chunkc tiling::window --send-to-monitor 1; chunkc tiling::monitor -f 1
#ctrl + cmd - 2  : chunkc tiling::window --send-to-monitor 2; chunkc tiling::monitor -f 2
#ctrl + cmd - 3  : chunkc tiling::window --send-to-monitor 3; chunkc tiling::monitor -f 3
#
## increase region size
#shift + alt - a : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge west
#shift + alt - s : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge south
#shift + alt - w : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge north
#shift + alt - d : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge east
#
## decrease region size
#shift + cmd - a : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge west
#shift + cmd - s : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge south
#shift + cmd - w : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge north
#shift + cmd - d : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge east
#
## set insertion point for focused container
##ctrl + alt - f : chunkc tiling::window --use-insertion-point cancel
##ctrl + alt - h : chunkc tiling::window --use-insertion-point west
##ctrl + alt - j : chunkc tiling::window --use-insertion-point south
##ctrl + alt - k : chunkc tiling::window --use-insertion-point north
##ctrl + alt - l : chunkc tiling::window --use-insertion-point east
#
## rotate tree
#alt - r : chunkc tiling::desktop --rotate 90
#
## mirror tree y-axis
#alt - y : chunkc tiling::desktop --mirror vertical
#
## mirror tree x-axis
#alt - x : chunkc tiling::desktop --mirror horizontal
#
## toggle desktop offset
#alt - a : chunkc tiling::desktop --toggle offset
#
## toggle window fullscreen
#alt - f : chunkc tiling::window --toggle fullscreen
#
## toggle window native fullscreen
#shift + alt - f : chunkc tiling::window --toggle native-fullscreen
#
## toggle window parent zoom
#alt - d : chunkc tiling::window --toggle parent
#
## toggle window split type
#alt - e : chunkc tiling::window --toggle split
#
## float / unfloat window
#alt - t : chunkc tiling::window --toggle float
#
## toggle sticky, float and resize to picture-in-picture size
#alt - s : chunkc tiling::window --toggle sticky;\
#          chunkc tiling::window --warp-floating pip-right
#
## float next window to be tiled
#shift + alt - t : chunkc set window_float_next 1
#
## change layout of desktop
#ctrl + alt - a : chunkc tiling::desktop --layout bsp
#ctrl + alt - s : chunkc tiling::desktop --layout monocle
#ctrl + alt - d : chunkc tiling::desktop --layout float
#
## toggle mouse follow
#alt - space : chunkc core::load ffm.so
#ctrl + alt - space : chunkc core::unload ffm.so
#
##ctrl + alt - w : chunkc tiling::desktop --deserialize ~/.chunkwm_layouts/dev_1
